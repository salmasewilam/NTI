
NTI_AVR.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000462  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000004d6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  00800060  00800060  000004d6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004d6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000508  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000120  00000000  00000000  00000544  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001981  00000000  00000000  00000664  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009ee  00000000  00000000  00001fe5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000866  00000000  00000000  000029d3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002c4  00000000  00000000  0000323c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000507  00000000  00000000  00003500  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000882  00000000  00000000  00003a07  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  00004289  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3a 00 	jmp	0x74	; 0x74 <__ctors_end>
   4:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__vector_1>
   8:	0c 94 47 01 	jmp	0x28e	; 0x28e <__vector_2>
   c:	0c 94 70 01 	jmp	0x2e0	; 0x2e0 <__vector_3>
  10:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  14:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  18:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  1c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  20:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  24:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  28:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  2c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  30:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  34:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  38:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  3c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  40:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  44:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  48:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  4c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  50:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
  54:	65 00       	.word	0x0065	; ????
  56:	6b 00       	.word	0x006b	; ????
  58:	71 00       	.word	0x0071	; ????
  5a:	77 00       	.word	0x0077	; ????
  5c:	7d 00       	.word	0x007d	; ????
  5e:	83 00       	.word	0x0083	; ????
  60:	89 00       	.word	0x0089	; ????
  62:	8f 00       	.word	0x008f	; ????
  64:	a3 00       	.word	0x00a3	; ????
  66:	a9 00       	.word	0x00a9	; ????
  68:	af 00       	.word	0x00af	; ????
  6a:	b5 00       	.word	0x00b5	; ????
  6c:	bb 00       	.word	0x00bb	; ????
  6e:	c1 00       	.word	0x00c1	; ????
  70:	c7 00       	.word	0x00c7	; ????
  72:	cd 00       	.word	0x00cd	; ????

00000074 <__ctors_end>:
  74:	11 24       	eor	r1, r1
  76:	1f be       	out	0x3f, r1	; 63
  78:	cf e5       	ldi	r28, 0x5F	; 95
  7a:	d8 e0       	ldi	r29, 0x08	; 8
  7c:	de bf       	out	0x3e, r29	; 62
  7e:	cd bf       	out	0x3d, r28	; 61

00000080 <__do_copy_data>:
  80:	10 e0       	ldi	r17, 0x00	; 0
  82:	a0 e6       	ldi	r26, 0x60	; 96
  84:	b0 e0       	ldi	r27, 0x00	; 0
  86:	e2 e6       	ldi	r30, 0x62	; 98
  88:	f4 e0       	ldi	r31, 0x04	; 4
  8a:	02 c0       	rjmp	.+4      	; 0x90 <__do_copy_data+0x10>
  8c:	05 90       	lpm	r0, Z+
  8e:	0d 92       	st	X+, r0
  90:	a0 36       	cpi	r26, 0x60	; 96
  92:	b1 07       	cpc	r27, r17
  94:	d9 f7       	brne	.-10     	; 0x8c <__do_copy_data+0xc>

00000096 <__do_clear_bss>:
  96:	20 e0       	ldi	r18, 0x00	; 0
  98:	a0 e6       	ldi	r26, 0x60	; 96
  9a:	b0 e0       	ldi	r27, 0x00	; 0
  9c:	01 c0       	rjmp	.+2      	; 0xa0 <.do_clear_bss_start>

0000009e <.do_clear_bss_loop>:
  9e:	1d 92       	st	X+, r1

000000a0 <.do_clear_bss_start>:
  a0:	a6 36       	cpi	r26, 0x66	; 102
  a2:	b2 07       	cpc	r27, r18
  a4:	e1 f7       	brne	.-8      	; 0x9e <.do_clear_bss_loop>
  a6:	0e 94 b7 01 	call	0x36e	; 0x36e <main>
  aa:	0c 94 2f 02 	jmp	0x45e	; 0x45e <_exit>

000000ae <__bad_interrupt>:
  ae:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b2 <DIO_voidSetPinDirection>:


#include "Dio.h"

void DIO_voidSetPinDirection(ports_t *ptr,unsigned char p,Direction dir )
{
  b2:	0f 93       	push	r16
  b4:	1f 93       	push	r17
	switch(p)
  b6:	06 2f       	mov	r16, r22
  b8:	10 e0       	ldi	r17, 0x00	; 0
  ba:	08 30       	cpi	r16, 0x08	; 8
  bc:	11 05       	cpc	r17, r1
  be:	a0 f5       	brcc	.+104    	; 0x128 <DIO_voidSetPinDirection+0x76>
  c0:	f8 01       	movw	r30, r16
  c2:	e6 5d       	subi	r30, 0xD6	; 214
  c4:	ff 4f       	sbci	r31, 0xFF	; 255
  c6:	0c 94 29 02 	jmp	0x452	; 0x452 <__tablejump2__>
	{
		case 0: ptr->DDR.PIN0=dir; break;
  ca:	fc 01       	movw	r30, r24
  cc:	21 81       	ldd	r18, Z+1	; 0x01
  ce:	40 fb       	bst	r20, 0
  d0:	20 f9       	bld	r18, 0
  d2:	21 83       	std	Z+1, r18	; 0x01
  d4:	29 c0       	rjmp	.+82     	; 0x128 <DIO_voidSetPinDirection+0x76>
		case 1: ptr->DDR.PIN1=dir; break;
  d6:	fc 01       	movw	r30, r24
  d8:	21 81       	ldd	r18, Z+1	; 0x01
  da:	40 fb       	bst	r20, 0
  dc:	21 f9       	bld	r18, 1
  de:	21 83       	std	Z+1, r18	; 0x01
  e0:	23 c0       	rjmp	.+70     	; 0x128 <DIO_voidSetPinDirection+0x76>
		case 2: ptr->DDR.PIN2=dir; break;
  e2:	fc 01       	movw	r30, r24
  e4:	21 81       	ldd	r18, Z+1	; 0x01
  e6:	40 fb       	bst	r20, 0
  e8:	22 f9       	bld	r18, 2
  ea:	21 83       	std	Z+1, r18	; 0x01
  ec:	1d c0       	rjmp	.+58     	; 0x128 <DIO_voidSetPinDirection+0x76>
		case 3: ptr->DDR.PIN3=dir; break;
  ee:	fc 01       	movw	r30, r24
  f0:	21 81       	ldd	r18, Z+1	; 0x01
  f2:	40 fb       	bst	r20, 0
  f4:	23 f9       	bld	r18, 3
  f6:	21 83       	std	Z+1, r18	; 0x01
  f8:	17 c0       	rjmp	.+46     	; 0x128 <DIO_voidSetPinDirection+0x76>
		case 4: ptr->DDR.PIN4=dir; break;
  fa:	fc 01       	movw	r30, r24
  fc:	21 81       	ldd	r18, Z+1	; 0x01
  fe:	40 fb       	bst	r20, 0
 100:	24 f9       	bld	r18, 4
 102:	21 83       	std	Z+1, r18	; 0x01
 104:	11 c0       	rjmp	.+34     	; 0x128 <DIO_voidSetPinDirection+0x76>
		case 5: ptr->DDR.PIN5=dir; break;
 106:	fc 01       	movw	r30, r24
 108:	21 81       	ldd	r18, Z+1	; 0x01
 10a:	40 fb       	bst	r20, 0
 10c:	25 f9       	bld	r18, 5
 10e:	21 83       	std	Z+1, r18	; 0x01
 110:	0b c0       	rjmp	.+22     	; 0x128 <DIO_voidSetPinDirection+0x76>
		case 6: ptr->DDR.PIN6=dir; break;
 112:	fc 01       	movw	r30, r24
 114:	21 81       	ldd	r18, Z+1	; 0x01
 116:	40 fb       	bst	r20, 0
 118:	26 f9       	bld	r18, 6
 11a:	21 83       	std	Z+1, r18	; 0x01
 11c:	05 c0       	rjmp	.+10     	; 0x128 <DIO_voidSetPinDirection+0x76>
		case 7: ptr->DDR.PIN7=dir; break;
 11e:	fc 01       	movw	r30, r24
 120:	21 81       	ldd	r18, Z+1	; 0x01
 122:	40 fb       	bst	r20, 0
 124:	27 f9       	bld	r18, 7
 126:	21 83       	std	Z+1, r18	; 0x01
	}
}
 128:	1f 91       	pop	r17
 12a:	0f 91       	pop	r16
 12c:	08 95       	ret

0000012e <DIO_voidSetPinValue>:

void DIO_voidSetPinValue(ports_t *ptr,unsigned char p,Value val)
{
 12e:	0f 93       	push	r16
 130:	1f 93       	push	r17
	switch(p)
 132:	06 2f       	mov	r16, r22
 134:	10 e0       	ldi	r17, 0x00	; 0
 136:	08 30       	cpi	r16, 0x08	; 8
 138:	11 05       	cpc	r17, r1
 13a:	a0 f5       	brcc	.+104    	; 0x1a4 <DIO_voidSetPinValue+0x76>
 13c:	f8 01       	movw	r30, r16
 13e:	ee 5c       	subi	r30, 0xCE	; 206
 140:	ff 4f       	sbci	r31, 0xFF	; 255
 142:	0c 94 29 02 	jmp	0x452	; 0x452 <__tablejump2__>
	{
		case 0: ptr->port.PIN0=val; break;
 146:	fc 01       	movw	r30, r24
 148:	22 81       	ldd	r18, Z+2	; 0x02
 14a:	40 fb       	bst	r20, 0
 14c:	20 f9       	bld	r18, 0
 14e:	22 83       	std	Z+2, r18	; 0x02
 150:	29 c0       	rjmp	.+82     	; 0x1a4 <DIO_voidSetPinValue+0x76>
		case 1: ptr->port.PIN1=val; break;
 152:	fc 01       	movw	r30, r24
 154:	22 81       	ldd	r18, Z+2	; 0x02
 156:	40 fb       	bst	r20, 0
 158:	21 f9       	bld	r18, 1
 15a:	22 83       	std	Z+2, r18	; 0x02
 15c:	23 c0       	rjmp	.+70     	; 0x1a4 <DIO_voidSetPinValue+0x76>
		case 2: ptr->port.PIN2=val; break;
 15e:	fc 01       	movw	r30, r24
 160:	22 81       	ldd	r18, Z+2	; 0x02
 162:	40 fb       	bst	r20, 0
 164:	22 f9       	bld	r18, 2
 166:	22 83       	std	Z+2, r18	; 0x02
 168:	1d c0       	rjmp	.+58     	; 0x1a4 <DIO_voidSetPinValue+0x76>
		case 3: ptr->port.PIN3=val; break;
 16a:	fc 01       	movw	r30, r24
 16c:	22 81       	ldd	r18, Z+2	; 0x02
 16e:	40 fb       	bst	r20, 0
 170:	23 f9       	bld	r18, 3
 172:	22 83       	std	Z+2, r18	; 0x02
 174:	17 c0       	rjmp	.+46     	; 0x1a4 <DIO_voidSetPinValue+0x76>
		case 4: ptr->port.PIN4=val; break;
 176:	fc 01       	movw	r30, r24
 178:	22 81       	ldd	r18, Z+2	; 0x02
 17a:	40 fb       	bst	r20, 0
 17c:	24 f9       	bld	r18, 4
 17e:	22 83       	std	Z+2, r18	; 0x02
 180:	11 c0       	rjmp	.+34     	; 0x1a4 <DIO_voidSetPinValue+0x76>
		case 5: ptr->port.PIN5=val; break;
 182:	fc 01       	movw	r30, r24
 184:	22 81       	ldd	r18, Z+2	; 0x02
 186:	40 fb       	bst	r20, 0
 188:	25 f9       	bld	r18, 5
 18a:	22 83       	std	Z+2, r18	; 0x02
 18c:	0b c0       	rjmp	.+22     	; 0x1a4 <DIO_voidSetPinValue+0x76>
		case 6: ptr->port.PIN6=val; break;
 18e:	fc 01       	movw	r30, r24
 190:	22 81       	ldd	r18, Z+2	; 0x02
 192:	40 fb       	bst	r20, 0
 194:	26 f9       	bld	r18, 6
 196:	22 83       	std	Z+2, r18	; 0x02
 198:	05 c0       	rjmp	.+10     	; 0x1a4 <DIO_voidSetPinValue+0x76>
		case 7: ptr->port.PIN7=val; break;
 19a:	fc 01       	movw	r30, r24
 19c:	22 81       	ldd	r18, Z+2	; 0x02
 19e:	40 fb       	bst	r20, 0
 1a0:	27 f9       	bld	r18, 7
 1a2:	22 83       	std	Z+2, r18	; 0x02
	}
}
 1a4:	1f 91       	pop	r17
 1a6:	0f 91       	pop	r16
 1a8:	08 95       	ret

000001aa <EXT_voidEnable>:
	}
	
}
void EXT_voidDisable(u8 intid)
{
	CLEAR_BIT(GICR,intid);
 1aa:	9b ef       	ldi	r25, 0xFB	; 251
 1ac:	98 0f       	add	r25, r24
 1ae:	93 30       	cpi	r25, 0x03	; 3
 1b0:	70 f5       	brcc	.+92     	; 0x20e <EXT_voidEnable+0x64>
 1b2:	9b b7       	in	r25, 0x3b	; 59
 1b4:	21 e0       	ldi	r18, 0x01	; 1
 1b6:	30 e0       	ldi	r19, 0x00	; 0
 1b8:	08 2e       	mov	r0, r24
 1ba:	02 c0       	rjmp	.+4      	; 0x1c0 <EXT_voidEnable+0x16>
 1bc:	22 0f       	add	r18, r18
 1be:	33 1f       	adc	r19, r19
 1c0:	0a 94       	dec	r0
 1c2:	e2 f7       	brpl	.-8      	; 0x1bc <EXT_voidEnable+0x12>
 1c4:	29 2b       	or	r18, r25
 1c6:	2b bf       	out	0x3b, r18	; 59
 1c8:	86 30       	cpi	r24, 0x06	; 6
 1ca:	29 f0       	breq	.+10     	; 0x1d6 <EXT_voidEnable+0x2c>
 1cc:	87 30       	cpi	r24, 0x07	; 7
 1ce:	51 f0       	breq	.+20     	; 0x1e4 <EXT_voidEnable+0x3a>
 1d0:	85 30       	cpi	r24, 0x05	; 5
 1d2:	e9 f4       	brne	.+58     	; 0x20e <EXT_voidEnable+0x64>
 1d4:	13 c0       	rjmp	.+38     	; 0x1fc <EXT_voidEnable+0x52>
 1d6:	85 b7       	in	r24, 0x35	; 53
 1d8:	8c 7f       	andi	r24, 0xFC	; 252
 1da:	85 bf       	out	0x35, r24	; 53
 1dc:	85 b7       	in	r24, 0x35	; 53
 1de:	68 2b       	or	r22, r24
 1e0:	65 bf       	out	0x35, r22	; 53
 1e2:	08 95       	ret
 1e4:	85 b7       	in	r24, 0x35	; 53
 1e6:	83 7f       	andi	r24, 0xF3	; 243
 1e8:	85 bf       	out	0x35, r24	; 53
 1ea:	85 b7       	in	r24, 0x35	; 53
 1ec:	70 e0       	ldi	r23, 0x00	; 0
 1ee:	66 0f       	add	r22, r22
 1f0:	77 1f       	adc	r23, r23
 1f2:	66 0f       	add	r22, r22
 1f4:	77 1f       	adc	r23, r23
 1f6:	68 2b       	or	r22, r24
 1f8:	65 bf       	out	0x35, r22	; 53
 1fa:	08 95       	ret
 1fc:	62 30       	cpi	r22, 0x02	; 2
 1fe:	21 f4       	brne	.+8      	; 0x208 <EXT_voidEnable+0x5e>
 200:	84 b7       	in	r24, 0x34	; 52
 202:	8f 7b       	andi	r24, 0xBF	; 191
 204:	84 bf       	out	0x34, r24	; 52
 206:	08 95       	ret
 208:	84 b7       	in	r24, 0x34	; 52
 20a:	80 64       	ori	r24, 0x40	; 64
 20c:	84 bf       	out	0x34, r24	; 52
 20e:	08 95       	ret

00000210 <EXTINT_setcallback>:
}
void EXTINT_setcallback(void (*p)(void),u8 intid)
{
	switch(intid)
 210:	66 30       	cpi	r22, 0x06	; 6
 212:	29 f0       	breq	.+10     	; 0x21e <EXTINT_setcallback+0xe>
 214:	67 30       	cpi	r22, 0x07	; 7
 216:	41 f0       	breq	.+16     	; 0x228 <EXTINT_setcallback+0x18>
 218:	65 30       	cpi	r22, 0x05	; 5
 21a:	79 f4       	brne	.+30     	; 0x23a <EXTINT_setcallback+0x2a>
 21c:	0a c0       	rjmp	.+20     	; 0x232 <EXTINT_setcallback+0x22>
	{
		case INT0: p_NTI[0]=p; break;
 21e:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 222:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
 226:	08 95       	ret
		case INT1: p_NTI[1]=p; break;
 228:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 22c:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 230:	08 95       	ret
		case INT2: p_NTI[2]=p; break;
 232:	90 93 65 00 	sts	0x0065, r25	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 236:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 23a:	08 95       	ret

0000023c <__vector_1>:
	}
	
}

ISR(INT0_vect)
{
 23c:	1f 92       	push	r1
 23e:	0f 92       	push	r0
 240:	0f b6       	in	r0, 0x3f	; 63
 242:	0f 92       	push	r0
 244:	11 24       	eor	r1, r1
 246:	2f 93       	push	r18
 248:	3f 93       	push	r19
 24a:	4f 93       	push	r20
 24c:	5f 93       	push	r21
 24e:	6f 93       	push	r22
 250:	7f 93       	push	r23
 252:	8f 93       	push	r24
 254:	9f 93       	push	r25
 256:	af 93       	push	r26
 258:	bf 93       	push	r27
 25a:	ef 93       	push	r30
 25c:	ff 93       	push	r31
	if (p_NTI[0]!=0)
 25e:	e0 91 60 00 	lds	r30, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 262:	f0 91 61 00 	lds	r31, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 266:	30 97       	sbiw	r30, 0x00	; 0
 268:	09 f0       	breq	.+2      	; 0x26c <__vector_1+0x30>
	{
		p_NTI[0]();
 26a:	09 95       	icall
	}
	return;
}
 26c:	ff 91       	pop	r31
 26e:	ef 91       	pop	r30
 270:	bf 91       	pop	r27
 272:	af 91       	pop	r26
 274:	9f 91       	pop	r25
 276:	8f 91       	pop	r24
 278:	7f 91       	pop	r23
 27a:	6f 91       	pop	r22
 27c:	5f 91       	pop	r21
 27e:	4f 91       	pop	r20
 280:	3f 91       	pop	r19
 282:	2f 91       	pop	r18
 284:	0f 90       	pop	r0
 286:	0f be       	out	0x3f, r0	; 63
 288:	0f 90       	pop	r0
 28a:	1f 90       	pop	r1
 28c:	18 95       	reti

0000028e <__vector_2>:

ISR(INT1_vect)
{
 28e:	1f 92       	push	r1
 290:	0f 92       	push	r0
 292:	0f b6       	in	r0, 0x3f	; 63
 294:	0f 92       	push	r0
 296:	11 24       	eor	r1, r1
 298:	2f 93       	push	r18
 29a:	3f 93       	push	r19
 29c:	4f 93       	push	r20
 29e:	5f 93       	push	r21
 2a0:	6f 93       	push	r22
 2a2:	7f 93       	push	r23
 2a4:	8f 93       	push	r24
 2a6:	9f 93       	push	r25
 2a8:	af 93       	push	r26
 2aa:	bf 93       	push	r27
 2ac:	ef 93       	push	r30
 2ae:	ff 93       	push	r31
	if (p_NTI[1]!=0)
 2b0:	e0 91 62 00 	lds	r30, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 2b4:	f0 91 63 00 	lds	r31, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 2b8:	30 97       	sbiw	r30, 0x00	; 0
 2ba:	09 f0       	breq	.+2      	; 0x2be <__vector_2+0x30>
	{
		p_NTI[1]();
 2bc:	09 95       	icall
	}
	return;
}
 2be:	ff 91       	pop	r31
 2c0:	ef 91       	pop	r30
 2c2:	bf 91       	pop	r27
 2c4:	af 91       	pop	r26
 2c6:	9f 91       	pop	r25
 2c8:	8f 91       	pop	r24
 2ca:	7f 91       	pop	r23
 2cc:	6f 91       	pop	r22
 2ce:	5f 91       	pop	r21
 2d0:	4f 91       	pop	r20
 2d2:	3f 91       	pop	r19
 2d4:	2f 91       	pop	r18
 2d6:	0f 90       	pop	r0
 2d8:	0f be       	out	0x3f, r0	; 63
 2da:	0f 90       	pop	r0
 2dc:	1f 90       	pop	r1
 2de:	18 95       	reti

000002e0 <__vector_3>:

ISR(INT2_vect)
{
 2e0:	1f 92       	push	r1
 2e2:	0f 92       	push	r0
 2e4:	0f b6       	in	r0, 0x3f	; 63
 2e6:	0f 92       	push	r0
 2e8:	11 24       	eor	r1, r1
 2ea:	2f 93       	push	r18
 2ec:	3f 93       	push	r19
 2ee:	4f 93       	push	r20
 2f0:	5f 93       	push	r21
 2f2:	6f 93       	push	r22
 2f4:	7f 93       	push	r23
 2f6:	8f 93       	push	r24
 2f8:	9f 93       	push	r25
 2fa:	af 93       	push	r26
 2fc:	bf 93       	push	r27
 2fe:	ef 93       	push	r30
 300:	ff 93       	push	r31
	if (p_NTI[2]!=0) 
 302:	e0 91 64 00 	lds	r30, 0x0064	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 306:	f0 91 65 00 	lds	r31, 0x0065	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 30a:	30 97       	sbiw	r30, 0x00	; 0
 30c:	09 f0       	breq	.+2      	; 0x310 <__vector_3+0x30>
	{
		p_NTI[2]();
 30e:	09 95       	icall
	}
	return;
 310:	ff 91       	pop	r31
 312:	ef 91       	pop	r30
 314:	bf 91       	pop	r27
 316:	af 91       	pop	r26
 318:	9f 91       	pop	r25
 31a:	8f 91       	pop	r24
 31c:	7f 91       	pop	r23
 31e:	6f 91       	pop	r22
 320:	5f 91       	pop	r21
 322:	4f 91       	pop	r20
 324:	3f 91       	pop	r19
 326:	2f 91       	pop	r18
 328:	0f 90       	pop	r0
 32a:	0f be       	out	0x3f, r0	; 63
 32c:	0f 90       	pop	r0
 32e:	1f 90       	pop	r1
 330:	18 95       	reti

00000332 <enable>:
 */ 
#include "GIE.h"
#include "utils.h"
void enable()
{
	SET_BIT(SREG,GI);
 332:	8f b7       	in	r24, 0x3f	; 63
 334:	80 68       	ori	r24, 0x80	; 128
 336:	8f bf       	out	0x3f, r24	; 63
 338:	08 95       	ret

0000033a <f1>:
	DIO_voidSetPinValue(ptrC,0,1);
}
void f3(void)
{
	DIO_voidSetPinDirection(ptrC,1,1);
	DIO_voidSetPinValue(ptrC,1,1);
 33a:	41 e0       	ldi	r20, 0x01	; 1
 33c:	62 e0       	ldi	r22, 0x02	; 2
 33e:	83 e3       	ldi	r24, 0x33	; 51
 340:	90 e0       	ldi	r25, 0x00	; 0
 342:	0e 94 59 00 	call	0xb2	; 0xb2 <DIO_voidSetPinDirection>
 346:	41 e0       	ldi	r20, 0x01	; 1
 348:	62 e0       	ldi	r22, 0x02	; 2
 34a:	83 e3       	ldi	r24, 0x33	; 51
 34c:	90 e0       	ldi	r25, 0x00	; 0
 34e:	0e 94 97 00 	call	0x12e	; 0x12e <DIO_voidSetPinValue>
 352:	08 95       	ret

00000354 <f2>:
 354:	41 e0       	ldi	r20, 0x01	; 1
 356:	60 e0       	ldi	r22, 0x00	; 0
 358:	83 e3       	ldi	r24, 0x33	; 51
 35a:	90 e0       	ldi	r25, 0x00	; 0
 35c:	0e 94 59 00 	call	0xb2	; 0xb2 <DIO_voidSetPinDirection>
 360:	41 e0       	ldi	r20, 0x01	; 1
 362:	60 e0       	ldi	r22, 0x00	; 0
 364:	83 e3       	ldi	r24, 0x33	; 51
 366:	90 e0       	ldi	r25, 0x00	; 0
 368:	0e 94 97 00 	call	0x12e	; 0x12e <DIO_voidSetPinValue>
 36c:	08 95       	ret

0000036e <main>:
}
int main(void)
{
	sevseg_init();
 36e:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <sevseg_init>
	//keypad_init();
	DIO_voidSetPinDirection(ptrD,2,0);
 372:	40 e0       	ldi	r20, 0x00	; 0
 374:	62 e0       	ldi	r22, 0x02	; 2
 376:	80 e3       	ldi	r24, 0x30	; 48
 378:	90 e0       	ldi	r25, 0x00	; 0
 37a:	0e 94 59 00 	call	0xb2	; 0xb2 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(ptrD,3,0);
 37e:	40 e0       	ldi	r20, 0x00	; 0
 380:	63 e0       	ldi	r22, 0x03	; 3
 382:	80 e3       	ldi	r24, 0x30	; 48
 384:	90 e0       	ldi	r25, 0x00	; 0
 386:	0e 94 59 00 	call	0xb2	; 0xb2 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(ptrD,4,0);
 38a:	40 e0       	ldi	r20, 0x00	; 0
 38c:	64 e0       	ldi	r22, 0x04	; 4
 38e:	80 e3       	ldi	r24, 0x30	; 48
 390:	90 e0       	ldi	r25, 0x00	; 0
 392:	0e 94 59 00 	call	0xb2	; 0xb2 <DIO_voidSetPinDirection>
	
	EXT_voidEnable(INT0,The_rising_edge);
 396:	63 e0       	ldi	r22, 0x03	; 3
 398:	86 e0       	ldi	r24, 0x06	; 6
 39a:	0e 94 d5 00 	call	0x1aa	; 0x1aa <EXT_voidEnable>
	EXT_voidEnable(INT1,The_rising_edge);
 39e:	63 e0       	ldi	r22, 0x03	; 3
 3a0:	87 e0       	ldi	r24, 0x07	; 7
 3a2:	0e 94 d5 00 	call	0x1aa	; 0x1aa <EXT_voidEnable>
//	EXT_voidEnable(INT2,The_rising_edge);
	
	EXTINT_setcallback(f2,INT0);
 3a6:	66 e0       	ldi	r22, 0x06	; 6
 3a8:	8a ea       	ldi	r24, 0xAA	; 170
 3aa:	91 e0       	ldi	r25, 0x01	; 1
 3ac:	0e 94 08 01 	call	0x210	; 0x210 <EXTINT_setcallback>
	EXTINT_setcallback(f1,INT1);
 3b0:	67 e0       	ldi	r22, 0x07	; 7
 3b2:	8d e9       	ldi	r24, 0x9D	; 157
 3b4:	91 e0       	ldi	r25, 0x01	; 1
 3b6:	0e 94 08 01 	call	0x210	; 0x210 <EXTINT_setcallback>
	//EXTINT_setcallback(f3,INT2);
	enable();
 3ba:	0e 94 99 01 	call	0x332	; 0x332 <enable>
 3be:	ff cf       	rjmp	.-2      	; 0x3be <main+0x50>

000003c0 <sevseg_init>:
#include <util/delay.h>
	
void sevseg_init(void)
{
	//set com as output for the four 7seg
	DIO_voidSetPinDirection(ptrA,2,1);
 3c0:	41 e0       	ldi	r20, 0x01	; 1
 3c2:	62 e0       	ldi	r22, 0x02	; 2
 3c4:	89 e3       	ldi	r24, 0x39	; 57
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	0e 94 59 00 	call	0xb2	; 0xb2 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(ptrA,3,1);
 3cc:	41 e0       	ldi	r20, 0x01	; 1
 3ce:	63 e0       	ldi	r22, 0x03	; 3
 3d0:	89 e3       	ldi	r24, 0x39	; 57
 3d2:	90 e0       	ldi	r25, 0x00	; 0
 3d4:	0e 94 59 00 	call	0xb2	; 0xb2 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(ptrB,5,1);
 3d8:	41 e0       	ldi	r20, 0x01	; 1
 3da:	65 e0       	ldi	r22, 0x05	; 5
 3dc:	86 e3       	ldi	r24, 0x36	; 54
 3de:	90 e0       	ldi	r25, 0x00	; 0
 3e0:	0e 94 59 00 	call	0xb2	; 0xb2 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(ptrB,6,1);
 3e4:	41 e0       	ldi	r20, 0x01	; 1
 3e6:	66 e0       	ldi	r22, 0x06	; 6
 3e8:	86 e3       	ldi	r24, 0x36	; 54
 3ea:	90 e0       	ldi	r25, 0x00	; 0
 3ec:	0e 94 59 00 	call	0xb2	; 0xb2 <DIO_voidSetPinDirection>
	
    //enable only one 7seg
	DIO_voidSetPinValue(ptrA,2,1);
 3f0:	41 e0       	ldi	r20, 0x01	; 1
 3f2:	62 e0       	ldi	r22, 0x02	; 2
 3f4:	89 e3       	ldi	r24, 0x39	; 57
 3f6:	90 e0       	ldi	r25, 0x00	; 0
 3f8:	0e 94 97 00 	call	0x12e	; 0x12e <DIO_voidSetPinValue>
	DIO_voidSetPinValue(ptrA,3,0);
 3fc:	40 e0       	ldi	r20, 0x00	; 0
 3fe:	63 e0       	ldi	r22, 0x03	; 3
 400:	89 e3       	ldi	r24, 0x39	; 57
 402:	90 e0       	ldi	r25, 0x00	; 0
 404:	0e 94 97 00 	call	0x12e	; 0x12e <DIO_voidSetPinValue>
	DIO_voidSetPinValue(ptrB,5,1);
 408:	41 e0       	ldi	r20, 0x01	; 1
 40a:	65 e0       	ldi	r22, 0x05	; 5
 40c:	86 e3       	ldi	r24, 0x36	; 54
 40e:	90 e0       	ldi	r25, 0x00	; 0
 410:	0e 94 97 00 	call	0x12e	; 0x12e <DIO_voidSetPinValue>
	DIO_voidSetPinValue(ptrB,6,1);
 414:	41 e0       	ldi	r20, 0x01	; 1
 416:	66 e0       	ldi	r22, 0x06	; 6
 418:	86 e3       	ldi	r24, 0x36	; 54
 41a:	90 e0       	ldi	r25, 0x00	; 0
 41c:	0e 94 97 00 	call	0x12e	; 0x12e <DIO_voidSetPinValue>
	
	//set decoder pins as output
	DIO_voidSetPinDirection(ptrB,0,1);
 420:	41 e0       	ldi	r20, 0x01	; 1
 422:	60 e0       	ldi	r22, 0x00	; 0
 424:	86 e3       	ldi	r24, 0x36	; 54
 426:	90 e0       	ldi	r25, 0x00	; 0
 428:	0e 94 59 00 	call	0xb2	; 0xb2 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(ptrB,1,1);
 42c:	41 e0       	ldi	r20, 0x01	; 1
 42e:	61 e0       	ldi	r22, 0x01	; 1
 430:	86 e3       	ldi	r24, 0x36	; 54
 432:	90 e0       	ldi	r25, 0x00	; 0
 434:	0e 94 59 00 	call	0xb2	; 0xb2 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(ptrB,2,1);
 438:	41 e0       	ldi	r20, 0x01	; 1
 43a:	62 e0       	ldi	r22, 0x02	; 2
 43c:	86 e3       	ldi	r24, 0x36	; 54
 43e:	90 e0       	ldi	r25, 0x00	; 0
 440:	0e 94 59 00 	call	0xb2	; 0xb2 <DIO_voidSetPinDirection>
	DIO_voidSetPinDirection(ptrB,4,1);
 444:	41 e0       	ldi	r20, 0x01	; 1
 446:	64 e0       	ldi	r22, 0x04	; 4
 448:	86 e3       	ldi	r24, 0x36	; 54
 44a:	90 e0       	ldi	r25, 0x00	; 0
 44c:	0e 94 59 00 	call	0xb2	; 0xb2 <DIO_voidSetPinDirection>
 450:	08 95       	ret

00000452 <__tablejump2__>:
 452:	ee 0f       	add	r30, r30
 454:	ff 1f       	adc	r31, r31
 456:	05 90       	lpm	r0, Z+
 458:	f4 91       	lpm	r31, Z
 45a:	e0 2d       	mov	r30, r0
 45c:	09 94       	ijmp

0000045e <_exit>:
 45e:	f8 94       	cli

00000460 <__stop_program>:
 460:	ff cf       	rjmp	.-2      	; 0x460 <__stop_program>
